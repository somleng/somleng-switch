# This docker-compose configuration is intended to be used for integration testing only.
#
# Note:
# Assumes postgres is running on the host machine.
# Postgres is not included in this docker compose configuration
# because of the complexity of adding code to wait for postgres to start.

volumes:
  workspace:
  opensips_fifo:

services:
  redis:
    image: public.ecr.aws/docker/library/redis:alpine
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  gateway-bootstrap:
    build:
      context: components/gateway
      target: bootstrap
    image: gateway:bootstrap
    platform: linux/amd64
    environment:
      DATABASE_USERNAME: "postgres"
      DATABASE_PASSWORD:
      DATABASE_NAME:
      DATABASE_HOST: "host.docker.internal"
      DATABASE_PORT: 5432
    extra_hosts:
      - "host.docker.internal:host-gateway"

  public_gateway:
    build:
      context: components/gateway
      target: public_gateway
    image: public_gateway:latest
    platform: linux/amd64
    environment:
      DATABASE_URL: "postgres://postgres:@host.docker.internal:5432/opensips_public_gateway_test"
      FIFO_NAME: /opensips/fifo/public_gateway
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD-SHELL", "nc -z -w 5 $$(hostname -i) 5060"]
      interval: 10s
      timeout: 5s
      retries: 10
    expose:
      - "5060/udp"
      - "5080/udp"
    volumes:
      - opensips_fifo:/opensips/fifo

  client_gateway:
    build:
      context: components/gateway
      target: client_gateway
    image: client_gateway:latest
    platform: linux/amd64
    environment:
      DATABASE_URL: "postgres://postgres:@host.docker.internal:5432/opensips_client_gateway_test"
      FIFO_NAME: /opensips/fifo/client_gateway
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD-SHELL", "nc -z -w 5 $$(hostname -i) 5060"]
      interval: 10s
      timeout: 5s
      retries: 10
    expose:
      - "5060/udp"
    volumes:
      - opensips_fifo:/opensips/fifo

  media_proxy:
    build:
      context: components/media_proxy
    image: media_proxy:latest
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD-SHELL", "nc -z -w 5 $$(hostname -i) 2224"]
      interval: 10s
      timeout: 5s
      retries: 10
    expose:
      - "2223/udp"

  freeswitch:
    build:
      context: components/freeswitch
    image: freeswitch:latest
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      FS_ALTERNATIVE_RTP_IP: "18.141.245.230"
      FS_EVENT_SOCKET_PASSWORD: "secret"
      FS_EVENT_SOCKET_PORT: 8021
      FS_MOD_RAYO_MAX_IDLE_SECS: 5
      FS_LOG_LEVEL: "debug"
    expose:
      - "5060/udp"
      - "5222/tcp"
      - "5080/udp"
      - "8021/tcp"
    healthcheck:
      test:
        ["CMD-SHELL", "fs_cli -p secret -x 'rayo status' | rayo_status_parser"]
      interval: 10s
      timeout: 5s
      retries: 10

  freeswitch_event_logger:
    build:
      context: components/freeswitch_event_logger
    image: freeswitch_event_logger:latest
    depends_on:
      redis:
        condition: service_healthy
      freeswitch:
        condition: service_healthy
    environment:
      EVENT_SOCKET_HOST: freeswitch:8021
      EVENT_SOCKET_PASSWORD: secret
      REDIS_URL: "redis://redis:6379/1"

  billing-engine:
    build:
      context: components/billing_engine
    image: billing-engine:latest
    depends_on:
      redis:
        condition: service_healthy
      freeswitch:
        condition: service_healthy
    environment:
      EVENT_SOCKET_HOST: freeswitch:8021
      EVENT_SOCKET_PASSWORD: secret
      STORDB_DBNAME: "cgrates"
      STORDB_USER: "cgrates"
      STORDB_PASSWORD: ""
      STORDB_HOST: "host.docker.internal"
      STORDB_PORT: 5432
      DATADB_HOST: "redis"
      DATADB_USER: "redis"
      DATADB_PORT: 6379
      DATADB_DBNAME: 2
      LOG_LEVEL: 7
      HTTP_LISTEN_ADDRESS: "0.0.0.0:2080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    expose:
      - "2080/tcp"

  billing-engine-bootstrap:
    build:
      context: components/billing_engine
      target: bootstrap
    image: billing-engine:bootstrap
    depends_on:
      redis:
        condition: service_healthy
    environment:
      STORDB_DBNAME: "cgrates"
      STORDB_USER: "cgrates"
      STORDB_PASSWORD: ""
      STORDB_HOST: "host.docker.internal"
      STORDB_PORT: 5432
      DATADB_HOST: "redis"
      DATADB_USER: "redis"
      DATADB_PORT: 6379
      DATADB_DBNAME: 2
    extra_hosts:
      - "host.docker.internal:host-gateway"


  switch-app:
    build:
      context: components/app
    image: switch-app:latest
    depends_on:
      redis:
        condition: service_healthy
    environment:
      AHN_CORE_HOST: freeswitch
      CALL_PLATFORM_STUB_RESPONSES: "true"
      CONNECT_WS_SERVER_URL: "ws://testing:3001"
      AUDIO_FILE_URL: "http://testing:8000/scenarios/files/tone.wav"
      AHN_CORE_HTTP_PORT: "8080"
      AWS_DEFAULT_REGION: "ap-southeast-1"
      REDIS_URL: "redis://redis:6379/1"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --server-response --spider --quiet http://0.0.0.0:8080/health_checks 2>&1 | grep '200 OK' > /dev/null",
        ]
      interval: 10s
      timeout: 5s
      retries: 10
    expose:
      - "8080/tcp"

  testing:
    build:
      context: components/testing
    image: testing:latest
    environment:
      DATABASE_HOST: host.docker.internal
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      FIFO_DIR: /opensips/fifo
      WS_SERVER_PORT: 3001
      FILE_SERVER_PORT: 8000
      SWITCH_PORT: 8080
      FILE_SERVER_LOG_FILE: http-server.log
      UAS: "true"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - workspace:/workspace
      - opensips_fifo:/opensips/fifo
