on: push
name: Build

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    env:
      AHN_ENV: test
      CI: true

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          bundler-cache: true

      - name: Run Specs
        run: |
          bundle exec rspec

      - name: Upload Test Coverage
        working-directory: ${{ env.working-directory }}
        continue-on-error: true
        env:
          CODACY_PROJECT_TOKEN: "${{ secrets.CODACY_PROJECT_TOKEN }}"
        run: |
          curl -Ls -o codacy-coverage-reporter "$(curl -Ls https://api.github.com/repos/codacy/codacy-coverage-reporter/releases/latest | jq -r '.assets | map({name, browser_download_url} | select(.name | contains("codacy-coverage-reporter-linux"))) | .[0].browser_download_url')"
          chmod +x codacy-coverage-reporter
          ./codacy-coverage-reporter report -l Ruby -r coverage/lcov/*

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/deploy_staging'
    env:
      IMAGE_TAG: ${{ github.sha }}
      ECR_PUBLIC_REGISTRY: public.ecr.aws
      APP_ECR_REPOSITORY_URI: public.ecr.aws/somleng/somleng-switch
      NGINX_ECR_REPOSITORY_URI: public.ecr.aws/somleng/somleng-switch-nginx
      FREESWITCH_ECR_REPOSITORY_URI: public.ecr.aws/somleng/somleng-switch-freeswitch

    strategy:
      matrix:
        app_env:
          - { name: 'production', identifier: 'somleng-switch', branch: 'refs/heads/master', task_definition: 'deploy/production/ecs_task_definition.json', image_tag: 'latest', ecs_service: 'somleng-switch', ecs_cluster: 'somleng-switch' }
          - { name: 'staging', identifier: 'somleng-switch-staging', branch: 'refs/heads/deploy_staging', task_definition: 'deploy/staging/ecs_task_definition.json', image_tag: 'staging', ecs_service: 'somleng-switch-staging', ecs_cluster: 'somleng-switch-staging' }

    steps:
      - name: Checkout
        if: github.ref == matrix.app_env.branch
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        id: aws-login
        if: github.ref == matrix.app_env.branch
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-skip-session-tagging: true
          role-duration-seconds: 3600
          aws-region: ap-southeast-1

      - name: Login to AWS Public ECR
        if: github.ref == matrix.app_env.branch
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ECR_PUBLIC_REGISTRY }}
          username: ${{ env.AWS_ACCESS_KEY_ID }}
          password: ${{ env.AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: us-east-1

      - name: Export Polly Voices
        if: github.ref == matrix.app_env.branch
        run: |
          ./docker/freeswitch/bin/export_aws_polly_voices "docker/freeswitch/conf/autoload_configs/polly_voices.xml"

      - name: Set up QEMU
        if: github.ref == matrix.app_env.branch
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        if: github.ref == matrix.app_env.branch
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        if: github.ref == matrix.app_env.branch
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ matrix.app_env.identifier }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.app_env.identifier }}-

      - name: Build and push nginx
        if: github.ref == matrix.app_env.branch
        uses: docker/build-push-action@v2
        with:
          context: "docker/nginx"
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache/.buildx-cache-${{ matrix.app_env.identifier }}-nginx
          cache-to: type=local,dest=/tmp/.buildx-cache-${{ matrix.app_env.identifier }}-nginx
          tags: |
            ${{ env.NGINX_ECR_REPOSITORY_URI }}:${{ matrix.app_env.image_tag }}
            ${{ env.NGINX_ECR_REPOSITORY_URI }}:${{ env.IMAGE_TAG }}

      - name: Build and push freeswitch
        if: github.ref == matrix.app_env.branch
        uses: docker/build-push-action@v2
        with:
          context: "docker/freeswitch"
          push: true
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache/.buildx-cache-${{ matrix.app_env.identifier }}-freeswitch
          cache-to: type=local,dest=/tmp/.buildx-cache-${{ matrix.app_env.identifier }}-freeswitch
          tags: |
            ${{ env.FREESWITCH_ECR_REPOSITORY_URI }}:${{ matrix.app_env.image_tag }}
            ${{ env.FREESWITCH_ECR_REPOSITORY_URI }}:${{ env.IMAGE_TAG }}

      - name: Build and push somleng-switch
        if: github.ref == matrix.app_env.branch
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache/.buildx-cache-${{ matrix.app_env.identifier }}
          cache-to: type=local,dest=/tmp/.buildx-cache-${{ matrix.app_env.identifier }}
          tags: |
            ${{ env.APP_ECR_REPOSITORY_URI }}:${{ matrix.app_env.image_tag }}
            ${{ env.APP_ECR_REPOSITORY_URI }}:${{ env.IMAGE_TAG }}

      - name: Move docker layer caches
        if: github.ref == matrix.app_env.branch
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        run: |
          rm -rf /tmp/.buildx-cache
          mkdir /tmp/.buildx-cache
          mv /tmp/.buildx-cache-${{ matrix.app_env.identifier }} /tmp/.buildx-cache
          mv /tmp/.buildx-cache-${{ matrix.app_env.identifier }}-nginx /tmp/.buildx-cache
          mv /tmp/.buildx-cache-${{ matrix.app_env.identifier }}-freeswitch /tmp/.buildx-cache

      - name: Prepare NGINX task definition
        if: github.ref == matrix.app_env.branch
        id: render-nginx-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ matrix.app_env.task_definition }}
          container-name: nginx
          image: ${{ env.NGINX_ECR_REPOSITORY_URI }}:${{ env.IMAGE_TAG }}

      - name: Prepare FreeSWITCH task definition
        if: github.ref == matrix.app_env.branch
        id: render-freeswitch-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ steps.render-nginx-task-def.outputs.task-definition }}
          container-name: freeswitch
          image: ${{ env.FREESWITCH_ECR_REPOSITORY_URI }}:${{ env.IMAGE_TAG }}

      - name: Prepare AppServer task definition
        if: github.ref == matrix.app_env.branch
        id: render-appserver-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ steps.render-freeswitch-task-def.outputs.task-definition }}
          container-name: app
          image: ${{ env.APP_ECR_REPOSITORY_URI }}:${{ env.IMAGE_TAG }}

      - name: Deploy App Server
        if: github.ref == matrix.app_env.branch
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-appserver-task-def.outputs.task-definition }}
          service: ${{ matrix.app_env.ecs_service }}
          cluster: ${{ matrix.app_env.ecs_cluster }}
          wait-for-service-stability: true
