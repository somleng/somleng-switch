name: Integration Tests
on:
  workflow_call:
    secrets:
      signalwire_token:
        required: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    env:
      PGHOST: localhost
      PGUSER: postgres
      CI: true

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build SomlengSWITCH
        uses: docker/build-push-action@v3
        with:
          push: false
          load: true
          tags: somleng-switch:latest
          cache-from: type=gha,scope=integration-tests-somleng-switch
          cache-to: type=gha,mode=max,scope=integration-tests-somleng-switch

      - name: Build FreeSWITCH
        uses: docker/build-push-action@v3
        with:
          push: false
          load: true
          context: docker/freeswitch
          build-args:
            signalwire_token=${{ secrets.signalwire_token }}
          tags: freeswitch:latest
          cache-from: type=gha,scope=integration-tests-freeswitch
          cache-to: type=gha,mode=max,scope=integration-tests-freeswitch

      - name: Build Public Gateway
        uses: docker/build-push-action@v3
        with:
          push: false
          load: true
          context: docker/gateway
          target: public_gateway
          tags: public_gateway:latest
          cache-from: type=gha,scope=integration-tests-public-gateway
          cache-to: type=gha,mode=max,scope=integration-tests-public-gateway

      - name: Build Client Gateway
        uses: docker/build-push-action@v3
        with:
          push: false
          load: true
          context: docker/gateway
          target: client_gateway
          tags: client_gateway:latest
          cache-from: type=gha,scope=integration-tests-client-gateway
          cache-to: type=gha,mode=max,scope=integration-tests-client-gateway

      - name: Build Media Proxy
        uses: docker/build-push-action@v3
        with:
          push: false
          load: true
          context: docker/media_proxy
          tags: media_proxy:latest
          cache-from: type=gha,scope=integration-tests-media-proxy
          cache-to: type=gha,mode=max,scope=integration-tests-media-proxy

      - name: Build Gateway Bootstrap
        uses: docker/build-push-action@v3
        with:
          push: false
          load: true
          context: docker/gateway
          target: bootstrap
          tags: gateway:bootstrap
          cache-from: type=gha,scope=integration-tests-gateway-bootstrap
          cache-to: type=gha,mode=max,scope=integration-tests-gateway-bootstrap

      - name: Build Testing
        uses: docker/build-push-action@v3
        with:
          push: false
          load: true
          context: docker/testing
          tags: testing:latest
          cache-from: type=gha,scope=integration-tests-testing
          cache-to: type=gha,mode=max,scope=integration-tests-testing

      - name: Run docker-compose
        run: |
          docker-compose run -e DATABASE_NAME=opensips_public_gateway_test gateway-bootstrap create_db public_gateway
          docker-compose run -e DATABASE_NAME=opensips_client_gateway_test gateway-bootstrap create_db client_gateway
          docker-compose up -d client_gateway public_gateway media_proxy freeswitch somleng-switch testing
          sleep 30

      - name: Run Public Gateway Tests
        run: |
          docker-compose run -e DATABASE_URL="postgres://postgres:@host.docker.internal:5432/opensips_public_gateway_test" -e FIFO_NAME="/opensips/fifo/public_gateway_fifo" testing /tests.sh public_gateway

      - name: Run Client Gateway Tests
        run: |
          docker-compose run -e DATABASE_URL="postgres://postgres:@host.docker.internal:5432/opensips_clients_gateway_test" -e FIFO_NAME="/opensips/fifo/client_gateway_fifo" testing /tests.sh client_gateway
